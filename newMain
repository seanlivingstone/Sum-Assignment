package application;


import java.io.FileInputStream;

import java.io.FileNotFoundException;

import java.util.ArrayList;

import javafx.animation.AnimationTimer;

import javafx.application.Application;

import javafx.event.Event;

import javafx.event.EventHandler;
import javafx.geometry.Bounds;
import javafx.geometry.Insets;

import javafx.stage.Stage;

import javafx.scene.Group;

import javafx.scene.Scene;

import javafx.scene.control.Label;

import javafx.scene.image.Image;

import javafx.scene.image.ImageView;

import javafx.scene.input.KeyCode;

import javafx.scene.input.KeyEvent;

import javafx.scene.input.*;

import javafx.scene.layout.Background;

import javafx.scene.layout.BackgroundFill;

import javafx.scene.layout.BorderPane;

import javafx.scene.layout.CornerRadii;

import javafx.scene.layout.Pane;

import javafx.scene.paint.Color;

import javafx.scene.paint.ImagePattern;

import javafx.scene.shape.Rectangle;

import javafx.scene.text.Font;

import javafx.scene.text.FontWeight;

import javafx.scene.text.Text;

import javafx.scene.transform.Rotate;

public class Main extends Application implements EventHandler<KeyEvent>
{

	//Leaderboard board = new Leaderboard();

	Pane pane = new Pane();

	Scene scene = new Scene(pane,1600,1000);

	Rectangle rect = new Rectangle();
	Rectangle rect1 = new Rectangle();
	Rectangle boundary = new Rectangle();//top
	Rectangle boundary1 = new Rectangle();//bottom
	Integer score = 0;
	boolean collision;

	long lastNanoTime = System.nanoTime();
	Entity player1;
	Entity player2;
	Entity bullet;
	public void start(Stage primaryStage) throws FileNotFoundException
	{

		Image image = new Image(new FileInputStream("C:\\Users\\ls12012241\\Pictures\\cool_sky_backgrounds_022.jpg"));
		Image image1 = new Image(new FileInputStream("C:\\Users\\ls12012241\\Pictures\\ship.png"));
		Image image2 = new Image(new FileInputStream("C:\\Users\\ls12012241\\Pictures\\ship.png"));
		Image image3 = new Image(new FileInputStream("C:\\Users\\ls12012241\\Downloads\\enemy_bullet1.gif"));
		Image image4 = new Image(new FileInputStream("C:\\Users\\ls12012241\\Downloads\\topborder.png"));
		player1 = new Entity(image1);
		 player2 = new Entity(image2);
		 bullet = new Entity(image3);
		ImageView imageView = new ImageView(image);
		ImageView imageView1 = new ImageView(image1);
		ImageView imageView2 = new ImageView(image2);
		ImageView imageView3 = new ImageView(image3);

		imageView.setX(0);

		imageView.setY(0);

		pane.getChildren().add(imageView);//background

		rect = player1.bounds();
		rect1 = player2.bounds();


		boundary.setX(0);boundary.setY(-20);
		boundary.setWidth(1600);boundary.setHeight(20);
		boundary.setFill(new ImagePattern(image4));
		pane.getChildren().add(boundary);

		boundary1.setX(0);boundary1.setY(1000);
		boundary1.setWidth(1600);boundary1.setHeight(20);
		boundary1.setFill(new ImagePattern(image4));
		pane.getChildren().add(boundary1);
		/*rect1.setX(1300);rect.setY(500);
		rect1.setWidth(100);rect.setHeight(100);
		rect1.setFill(new ImagePattern(image2));
		pane.getChildren().add(rect1);*/



		/*pane.getChildren().add(board.getPoints());

		board.getPoints().setX(350);

		board.getPoints().setY(50);*/



		if(collision)
		{
			System.out.println("Collision");
		}

		primaryStage.setScene(scene);

		primaryStage.show();

		primaryStage.setTitle("DogFight");


		player2.setPosition(1300,300);
		//bullet.setPosition((int)rect.getLayoutX(), (int)rect.getLayoutY());
		pane.getChildren().add(player1.getSprite());
		pane.getChildren().add(player2.getSprite());

		ArrayList<String> input = new ArrayList<String>();

		scene.setOnKeyPressed(new EventHandler<KeyEvent>()

		{

			public void handle(KeyEvent e)

			{

				String code = e.getCode().toString();

				if(!input.contains(code))

					input.add(code);

			}

		});

		scene.setOnKeyReleased(new EventHandler<KeyEvent>()

		{

			public void handle(KeyEvent e)

			{

				String code = e.getCode().toString();

				if(input.contains(code))

					input.remove(code);
			}

		});

		new AnimationTimer()

		{

			public void handle(long currentNanoTime)

			{

				double elapsedTime = (currentNanoTime - lastNanoTime) / 1000000000.0;

				lastNanoTime = currentNanoTime;



				if(input.contains("W"))

					player1.addVelocity(0,-5);

				if(input.contains("S"))

					player1.addVelocity(0,5);

				if(input.contains("A"))

					player1.addVelocity(-5,0);

				if(input.contains("D"))

					player1.addVelocity(5,0);

				player1.update(elapsedTime);

				player1.render();

				if(input.contains("UP"))

					player2.addVelocity(0,-5);

				if(input.contains("DOWN"))

					player2.addVelocity(0,5);

				if(input.contains("LEFT"))

					player2.addVelocity(-5,0);

				if(input.contains("RIGHT"))

					player2.addVelocity(5,0);

				player2.update(elapsedTime);

				player2.render();

				if(input.contains("SPACE"))
				{
					bullet.setVelocity(0, -400);
					bullet.setPosition(player1.bounds().getX() + 32, player1.bounds().getY());
				}

				bullet.update(elapsedTime);
				bullet.render();

				if(collision())
				{
					System.out.println("COLLISION");
					player1.setPosition(300,300);
					player2.setPosition(1300,300);
					player1.setVelocity(0,0);
					player2.setVelocity(0,0);
				}

				if(boundCollision())
				{

					System.out.println("bCollisoin");
					player1.setVelocity(0,0);
				}

				if(boundCollision2())
				{

					System.out.println("bCollisoin2");
					player2.setVelocity(0,0);
				}

				if(boundCollision3())
				{

					System.out.println("bCollisoin3");
					player1.setVelocity(0,0);
				}

				if(boundCollision4())
				{

					System.out.println("bCollisoin4");
					player2.setVelocity(0,0);
				}


			}

		}.start();

		pane.getChildren().add(bullet.getSprite());



	}

	public void handle(KeyEvent event)

	{
		double x = 0, y = 0;
		/*if(event.getCode() == KeyCode.D && collision()==false)

{

x=5.0;

}

if(event.getCode() == KeyCode.A && collision()==false)

{

rect.getTransforms().add(new Rotate(-20,rect.getX() + rect.getWidth()/2,rect.getY() + rect.getHeight()/2));

rect.setX(5*getTime(System.nanoTime()));

}

if(event.getCode() == KeyCode.W && collision()==false)

{

y=5.0;

rect.setY(5*getTime(System.nanoTime()));

}

if(event.getCode() == KeyCode.S && collision()==false)	{

y=5.0;

rect.setY(5*getTime(System.nanoTime()));

}

if(event.getCode() == KeyCode.A && collision()==true)

{

rect.setX(rect.getX()-20);

rect.getTransforms().add(new Rotate(-20,rect.getX() + rect.getWidth()/2,rect.getY() + rect.getHeight()/2));

}

if(event.getCode() == KeyCode.D && collision()==true)

{

rect.setX(rect.getX()+20);

rect.getTransforms().add(new Rotate(20,rect.getX() + rect.getWidth()/2,rect.getY() + rect.getHeight()/2));

}

if(event.getCode() == KeyCode.W && collision()==true)

{



y=10;

rect.setY(rect.getY()+y);

}

if(event.getCode() == KeyCode.S && collision()==true)

{

y=10;

rect.setY(rect.getY()-y);

}

		 */
	}

	public boolean collision()
	{
		collision = false;

		if(player1.bounds().getBoundsInLocal().intersects(player2.bounds().getBoundsInLocal()))
		{
			collision = true;
			System.out.println("Collision");
		}

		return collision;

	}

	//top boundary
	public boolean boundCollision()
	{
		boolean bCollision = false;

		if(player1.bounds().getBoundsInLocal().intersects(boundary.getBoundsInLocal()))
		{
			bCollision = true;
			System.out.println("bCollision");
		}

		return bCollision;
	}

	public boolean boundCollision2()
	{
		boolean bCollision = false;

		if(player2.bounds().getBoundsInLocal().intersects(boundary.getBoundsInLocal()))
		{
			bCollision = true;
			System.out.println("bCollision");
		}

		return bCollision;
	}


	//bottom boundary

	public boolean boundCollision3()
	{
		boolean bCollision = false;

		if(player1.bounds().getBoundsInLocal().intersects(boundary1.getBoundsInLocal()))
		{
			bCollision = true;
			System.out.println("bCollision1");
		}

		return bCollision;
	}

	public boolean boundCollision4()
	{
		boolean bCollision = false;

		if(player2.bounds().getBoundsInLocal().intersects(boundary1.getBoundsInLocal()))
		{
			bCollision = true;
			System.out.println("bCollision1");
		}

		return bCollision;
	}
	/*public void handle(KeyEvent event)

{

double x = 0, y = 0;

if(event.getCode() == KeyCode.RIGHT)

{

x=5.0;

rect.getTransforms().add(new Rotate(20,rect.getX() + rect.getWidth()/2,rect.getY() + rect.getHeight()/2));
}

if(event.getCode() == KeyCode.LEFT)

{

rect.getTransforms().add(new Rotate(-20,rect.getX() + rect.getWidth()/2,rect.getY() + rect.getHeight()/2));

}

if(event.getCode() == KeyCode.UP)

{

y=5.0;

rect.setY(rect.getY()-y);

}

if(event.getCode() == KeyCode.DOWN)

{

y=5.0;

rect.setY(rect.getY()+y);

}

}*/

	public static void main(String[] args)

	{

		launch(args);

	}

}
